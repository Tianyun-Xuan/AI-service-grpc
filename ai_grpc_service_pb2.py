# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ai_grpc_service.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ai_grpc_service.proto',
  package='ai_grpc',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x15\x61i_grpc_service.proto\x12\x07\x61i_grpc\"?\n\x0bTaskRequest\x12#\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32\x13.ai_grpc.ActionCode\x12\x0b\n\x03msg\x18\x02 \x01(\t\"0\n\tTaskReply\x12#\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x15.ai_grpc.ResponseCode*\x19\n\nActionCode\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x00*!\n\x0cResponseCode\x12\x06\n\x02OK\x10\x00\x12\t\n\x05\x45rror\x10\x01\x32K\n\x11\x41IGprcTaskService\x12\x36\n\x08SendTask\x12\x14.ai_grpc.TaskRequest\x1a\x12.ai_grpc.TaskReply\"\x00\x62\x06proto3'
)

_ACTIONCODE = _descriptor.EnumDescriptor(
  name='ActionCode',
  full_name='ai_grpc.ActionCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='DEFAULT', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=149,
  serialized_end=174,
)
_sym_db.RegisterEnumDescriptor(_ACTIONCODE)

ActionCode = enum_type_wrapper.EnumTypeWrapper(_ACTIONCODE)
_RESPONSECODE = _descriptor.EnumDescriptor(
  name='ResponseCode',
  full_name='ai_grpc.ResponseCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='Error', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=176,
  serialized_end=209,
)
_sym_db.RegisterEnumDescriptor(_RESPONSECODE)

ResponseCode = enum_type_wrapper.EnumTypeWrapper(_RESPONSECODE)
DEFAULT = 0
OK = 0
Error = 1



_TASKREQUEST = _descriptor.Descriptor(
  name='TaskRequest',
  full_name='ai_grpc.TaskRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='action', full_name='ai_grpc.TaskRequest.action', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='msg', full_name='ai_grpc.TaskRequest.msg', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=34,
  serialized_end=97,
)


_TASKREPLY = _descriptor.Descriptor(
  name='TaskReply',
  full_name='ai_grpc.TaskReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='ai_grpc.TaskReply.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=99,
  serialized_end=147,
)

_TASKREQUEST.fields_by_name['action'].enum_type = _ACTIONCODE
_TASKREPLY.fields_by_name['code'].enum_type = _RESPONSECODE
DESCRIPTOR.message_types_by_name['TaskRequest'] = _TASKREQUEST
DESCRIPTOR.message_types_by_name['TaskReply'] = _TASKREPLY
DESCRIPTOR.enum_types_by_name['ActionCode'] = _ACTIONCODE
DESCRIPTOR.enum_types_by_name['ResponseCode'] = _RESPONSECODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

TaskRequest = _reflection.GeneratedProtocolMessageType('TaskRequest', (_message.Message,), {
  'DESCRIPTOR' : _TASKREQUEST,
  '__module__' : 'ai_grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:ai_grpc.TaskRequest)
  })
_sym_db.RegisterMessage(TaskRequest)

TaskReply = _reflection.GeneratedProtocolMessageType('TaskReply', (_message.Message,), {
  'DESCRIPTOR' : _TASKREPLY,
  '__module__' : 'ai_grpc_service_pb2'
  # @@protoc_insertion_point(class_scope:ai_grpc.TaskReply)
  })
_sym_db.RegisterMessage(TaskReply)



_AIGPRCTASKSERVICE = _descriptor.ServiceDescriptor(
  name='AIGprcTaskService',
  full_name='ai_grpc.AIGprcTaskService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=211,
  serialized_end=286,
  methods=[
  _descriptor.MethodDescriptor(
    name='SendTask',
    full_name='ai_grpc.AIGprcTaskService.SendTask',
    index=0,
    containing_service=None,
    input_type=_TASKREQUEST,
    output_type=_TASKREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_AIGPRCTASKSERVICE)

DESCRIPTOR.services_by_name['AIGprcTaskService'] = _AIGPRCTASKSERVICE

# @@protoc_insertion_point(module_scope)
